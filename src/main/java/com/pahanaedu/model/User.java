package com.pahanaedu.model;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

public class User {
    private String id; // MongoDB _id field (optional, auto-generated by MongoDB)

    @NotNull(message = "Username cannot be null")
    @Size(min = 3, max = 50, message = "Username must be between 3 and 50 characters")
    private String username;

    @NotNull(message = "Password cannot be null")
    @Size(min = 6, max = 100, message = "Password must be between 6 and 100 characters")
    private String password;

    @NotNull(message = "Role cannot be null")
    @Size(min = 3, max = 20, message = "Role must be between 3 and 20 characters")
    private String role; // e.g., "admin", "staff"

    // No-arg constructor for Java Beans and MongoDB
    public User() {
    }

    // Constructor with required fields
    public User(String username, String password, String role) {
        this.username = username;
        this.password = password;
        this.role = role;
    }

    // Getters and Setters
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }

    // toString for debugging and display (excluding password for security)
    @Override
    public String toString() {
        return "User{" +
                "id='" + id + '\'' +
                ", username='" + username + '\'' +
                ", role='" + role + '\'' +
                '}';
    }
}